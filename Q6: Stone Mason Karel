from karel.stanfordkarel import *

"""
File: StoneMasonKarel.py
------------------------
StoneMasonKarel solves the "repair the quad" problem.
"""

def main():
    while front_is_clear():
        turn_left() #Face up
        work_it() 
        check() #Place beeper if none exists on current square.
        flip() #Return
        work_it()
        turn_left() #Reset to original position.
        
        if front_is_clear():
            hop()

    if front_is_blocked():
        turn_left() #Face up
        work_it() 
        check() #Place beeper if none exists on current square.
        flip() #Return
        work_it()
        turn_left() #Reset to original position.

def work_it():
    while front_is_clear():
        if no_beepers_present():
            put_beeper()
        move()

def check():
    if no_beepers_present():
            put_beeper()
    
def flip():
    turn_left()
    turn_left()

def hop():
    move()
    move()
    move()
    if front_is_clear():
        move()

def turn_right():
    turn_left()
    turn_left()
    turn_left()

if __name__ == '__main__':
    run_karel_program('SampleQuad1.w')
